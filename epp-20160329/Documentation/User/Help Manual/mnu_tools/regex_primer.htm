<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Tools/Search.../Regular Expression Primer</title>
<link rel="stylesheet" type="text/css" href="../explorer++.css">
</head>

<body>

<h2><a name="top"></a><a href="../nav/mnu-tools.htm">Tools</a>/<img border="0" src="../images/icons/search.png" hspace="5" width="16" height="16"><a href="search.htm">Search...</a>/Regular 
Expression Primer</h2>
<p><b>Explorer++</b>'s <b>Search</b> tool can search for files and folders using 
regular expressions, but this concept might be foreign to some users.&nbsp; This 
primer hopes to shed enough light on the subject to allow you to use regular 
expressions - at least in a simple form - in the <b>Search</b> too.&nbsp; For 
more in-depth treatment of this subject, see other resources; the Internet has 
volumes of information available.&nbsp; Note that because only file and folder 
names are being searched for, regular expressions which involve multiple lines 
and replacing text are not used.</p>
<table border="0" style="border-collapse: collapse" bordercolor="#111111" cellspacing="0" cellpadding="0">
  <tr>
    <td width="34" align="center">
    <img border="0" src="../images/common/caution24x24.gif" hspace="0" width="24" height="24"></td>
    <td width="3" bgcolor="#FF0000">&nbsp;</td>
    <td width="10">&nbsp;</td>
    <td bgcolor="#FDE1E1"><b><font size="3" color="#FF0000">Caution:</font></b>&nbsp; 
    Be mindful of what you read on the Internet; regular Expressions are 
    somewhat platform/application specific.&nbsp; While common behaviours exist, 
    some platforms/applications introduce syntax which may not work in <b>
    Explorer++</b>.&nbsp; For the most part, the Search dialog uses a subset of
    <a class="EXTlnk" title="MSDN page" target="_blank" href="http://msdn.microsoft.com/en-us/library/bb982727.aspx">
    TR1 Regular Expressions</a>.</td>
  </tr>
</table>
<p>&nbsp;</p>
<h3>What are Regular Expressions?</h3>
<p>Regular expressions are a concise and flexible notation for finding and 
replacing patterns of text - the <i>replacing</i> part won't be covered here, as 
the nature of <b>Search</b> relies on <i>finding</i> instead.&nbsp; Regular 
expressions are written in text (letters, numbers and special symbols) using 2 
distinct categories:</p>
<ul>
  <li>literals - these are characters (or groups of characters) which are to be 
  found in the target string <i>as-is.&nbsp; </i>Any characters which are not 
  used as meta-characters can be considered as literals; and</li>
  <li>meta-characters - special characters which do not represent themselves, 
  but are a <i>coded representation</i> of text sequences to find.</li>
</ul>
<p>Meta-characters generally consist of the following characters:
<font face="Courier New" size="3">ˆ $ . * \ [ ] { } ( ) + ? |</font></p>
<p>Some other characters might also be considered meta-characters when used in a 
special context.&nbsp; Meta-characters may also be used as literals (with a 
special syntax) if needed.&nbsp; Unfortunately, implementations of regular 
expression handlers do vary in the language (based on the application and 
operating system), but the basic set of instructions should be the same.&nbsp; 
For the purposes of <b>Search</b>, we will only consider basic searching.</p>
<p>&nbsp;</p>
<h3>Do I need to know Regular Expressions?</h3>
<p>The short answer is probably not - since with <b>Explorer++</b> we are only 
searching for file and folder names, likely the conventional method of searching 
(limited wildcards, text) may be sufficient.&nbsp; But regular expressions can 
accommodate that <i>weird</i> search that you might need to do and can also be 
used to combine what might otherwise have been multiple searches into a single 
search.&nbsp; Many other applications provide regular expression capability, 
particularly for searching text <b>within</b> files and search-and-replace 
situations.&nbsp; Once you learn regular expressions, you may never go back to
<i>conventional</i> searching.</p>
<p>&nbsp;</p>
<h3>How do Regular Expressions work?</h3>
<p>The regular expression is a set of <i>mini-rules</i>, describing what is to 
be found in the target string.&nbsp; The <i>mini-rules</i> are applied to the 
string in sequence - left to right - and if the described text is found, a <i>
pattern match</i> is accomplished (success).&nbsp; Once a match is made to an 
element (mini-rule), the text - in the target string - that caused the match is 
considered <i>thrown away</i>, and is not used again..&nbsp; If <b>any</b> of 
the rules fail - that is, the anticipated pattern of text is not found - then 
the whole regular expression is considered to have failed (no pattern match).&nbsp; 
In <b>Explorer++</b>'s <b>Search</b> tool, if a pattern match is made (subject 
to a match also with file attributes and case as set in the dialog), the file is 
listed in the results pane.&nbsp; Also, in this context (matching file/folder 
names), <span style="background-color: #FFFFDD">the regular expression must 
describe the </span><b><span style="background-color: #FFFFDD">entire</span></b><span style="background-color: #FFFFDD"> 
file/folder name,</span> minus the path, of course.&nbsp; This is not as 
difficult as it sounds since regular expressions have wildcards, repeats, etc. 
to accommodate unknown characters.&nbsp; Some other aspects of regular 
expressions - handling multiple lines, replacing text, etc. are not applicable 
and are not covered here.</p>
<p>&nbsp;</p>
<h3>Elements (<span style="font-weight: 400">or </span><i>Mini-rules</i>) - 
short list</h3>
<p>The following table contains a <b>few</b> meta-characters and elements to 
demonstrate the power of Regular Expressions.&nbsp; Refer to the
<a href="../appendixC/regex_ref.htm">Regular Expression Reference</a> (Appendix 
C) for more elements and details.</p>
<table border="1" cellpadding="2" cellspacing="1">
  <tr>
    <td width="130" class="tabletitle">EXPRESSION</td>
    <td width="85" class="tabletitle" align="center">SYNTAX</td>
    <td width="117" class="tabletitle">ORDINARY NAME</td>
    <td class="tabletitle">DESCRIPTION</td>
    <td width="280" class="tabletitle">EXAMPLES</td>
  </tr>
  <tr>
    <td width="130">Any character</td>
    <td width="85" align="center"><font face="Courier New">.</font></td>
    <td width="117">dot or period</td>
    <td>This is the wildcard character - matches any single character (except a 
    newline - not used in file/folder names)</td>
    <td width="280"><font face="Courier New">s.s</font> matches <b>sys</b> 
    (system) and <b>ses</b> (session),<br>
    but not <b>sores</b> </td>
  </tr>
  <tr>
    <td width="130">Zero or more</td>
    <td width="85" align="center"><font face="Courier New">*</font></td>
    <td width="117">asterisk</td>
    <td>matches zero or more occurrences of the preceding expression, and makes 
    all possible matches</td>
    <td width="280"><font face="Courier New"><span class="input">a*b</span></font> 
    matches <b>b</b> (bat) and <b>ab</b> (about)<br>
    <font face="Courier New">.*</font> matches any sequence of characters</td>
  </tr>
  <tr>
    <td width="130">One or more</td>
    <td width="85" align="center"><font face="Courier New">+</font></td>
    <td width="117">plus</td>
    <td>matches at least one occurrence of the preceding expression, same as
    <font face="Courier New">{1,}</font> (see Repetition below)</td>
    <td width="280"><font face="Courier New">rol+</font> matches <b>rol</b> and
    <b>rolllll</b>, but not <b>ro</b></td>
  </tr>
  <tr>
    <td width="130">Or</td>
    <td width="85" align="center">|</td>
    <td width="117"><i>pipe</i>, vertical line</td>
    <td>matches either the expression before or the one after the OR symbol (<font face="Courier New">|</font>). 
    Mostly used in a group.</td>
    <td width="280"><font face="Courier New">AL|TE</font> matches <b>ALE</b> or
    <b>ATE</b></td>
  </tr>
  <tr>
    <td width="130">Group</td>
    <td width="85" align="center"><font face="Courier New">()</font></td>
    <td width="117">parentheses</td>
    <td>isolates an Or expression</td>
    <td width="280"><font face="Courier New">a(jpg|jpeg)</font> matches <b>ajpg</b> 
    or <b>ajpeg</b></td>
  </tr>
  <tr>
    <td width="130">Escape</td>
    <td width="85" align="center"><font face="Courier New">\</font></td>
    <td width="117">backslash</td>
    <td>when it precedes a meta-character, the combination is taken as a 
    literal.&nbsp; Some meta-characters<font face="Courier New" size="3">,</font> 
    namely <font face="Courier New" size="3">ˆ$.[]{}()+</font>, may be used in 
    file/folder names.</td>
    <td width="280"><font face="Courier New">a\.txt</font> matches <b>a.txt</b></td>
  </tr>
</table>
<p>&nbsp;</p>
<h3><a name="demos"></a>Demonstrations</h3>
<ul>
  <li>Navigate to the <a href="file:///C:/Windows">C:\Windows</a> folder.&nbsp; 
  Your drive letter may be different, depending on your installation.</li>
  <li>Open the Search dialog (<font face="Courier New">Ctrl+F</font>)</li>
  <li>Clear all attribute checkboxes and the Search Subfolders checkbox.&nbsp; 
  Check the Case Insensitive checkbox.&nbsp; Check the Use Regular Expressions 
  checkbox.</li>
</ul>
<ol>
  <li>Use&nbsp;&nbsp; <font face="Courier New">.*\.(ini|log)</font>&nbsp;&nbsp; 
  as the <b>Filename:</b>, and do a search.&nbsp; What did it do?&nbsp; It 
  should have returned all <b>ini</b> and log files; here's a breakdown of what 
  happened...</li>
</ol>
<blockquote>
  <table border="0" cellpadding="2" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="1021">
    <tr>
      <td width="89" valign="top"><font face="Courier New">.+</font></td>
      <td width="924">This is the wildcard (any character) followed by &quot;one of 
      more repeats&quot;.&nbsp; This matches any character (and at least one!) 
      until...</td>
    </tr>
    <tr>
      <td width="89" valign="top"><font face="Courier New">\.</font></td>
      <td width="924">This is the meta-character &quot;<font face="Courier New">.</font>&quot; 
      but escaped; this considered the &quot;<font face="Courier New">.</font>&quot; as 
      just a dot/period (literal).&nbsp; This matches the dot between the file 
      name and the file extension.</td>
    </tr>
    <tr>
      <td width="89" valign="top"><font face="Courier New">(ini|log)</font></td>
      <td width="924">This is a group (parentheses), just to avoid any possible 
      misinterpretations.&nbsp; Inside the group is &quot;<font face="Courier New">ini</font>&quot;
      <b>or</b> &quot;<font face="Courier New">log</font>&quot;; in other words, match &quot;<font face="Courier New">ini</font>&quot;
      <b>or</b> &quot;<font face="Courier New">log</font>&quot; as the extension (or at 
      least, the next characters).&nbsp; If any files have characters after &quot;<font face="Courier New">ini</font>&quot; 
      or &quot;<font face="Courier New">log</font>&quot;, they won't match the expression.</td>
    </tr>
  </table>
</blockquote>
<ol>
  <li value="2">Use&nbsp;&nbsp; <font face="Courier New">.*\d+.*\.\D+</font>&nbsp;&nbsp; 
  as the <b>Filename:</b>, and do a search.&nbsp; This one is a little more 
  complex - refer to <a href="../appendixC/regex_ref.htm#elements">Appendix C</a> 
  for a bit more detail on each element.&nbsp; Here's a breakdown first...</li>
</ol>
<blockquote>
  <table border="0" cellpadding="2" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="1021">
    <tr>
      <td width="89" valign="top"><font face="Courier New">.*</font></td>
      <td width="924">This is the wildcard followed by &quot;zero or more repeats&quot;.&nbsp; 
      This skips/matches y everything (<b>if</b> it exists) until the next 
      element.</td>
    </tr>
    <tr>
      <td width="89" valign="top"><font face="Courier New">\d+</font></td>
      <td width="924"><font face="Courier New">\d</font><font face="ADMUI3Lg"> 
      is a character class (shorthand notation for digits), repeated one or more 
      times.&nbsp; This matches 0-9 but nothing else (at least one digit).</font></td>
    </tr>
    <tr>
      <td width="89" valign="top"><font face="Courier New">.*</font></td>
      <td width="924">Again, this skips/matches y everything (<b>if</b> it 
      exists) until the next element.</td>
    </tr>
    <tr>
      <td width="89" valign="top"><font face="Courier New">\.</font></td>
      <td width="924">The dot/period character (escaped) is match, just before 
      the extension.</td>
    </tr>
    <tr>
      <td width="89" valign="top"><font face="Courier New">\D+</font></td>
      <td width="924">\D is a character class (shorthand for <b>not</b> a digit) 
      - repeated at least once.&nbsp; This matches the extension, but only if 
      there are no digits.</td>
    </tr>
  </table>
  <p>So what did it find?</p>
  <ul>
    <li>all files with at least one digit in the filename, but no digits in the 
    extension.&nbsp; And it must have an extension.&nbsp; Try doing that with a 
    conventional wildcard search!</li>
  </ul>
</blockquote>
<ol>
  <li value="3">Here's one more demonstration, for keeners!&nbsp; This time<ul>
    <li>Navigate to your Windows folder (usually C:\Windows).</li>
    <li>Again, no attribute filtering and check Case Insensitive.&nbsp; Check 
    the Search Subfolders checkbox - we want to scan all of Windows subfolders 
    (it is relatively quick!).</li>
    <li>Use<font face="Courier New">&nbsp;&nbsp; \{[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}\}</font><br>
    as the <b>Filename:</b>, and do a search.&nbsp; Don't type it, just copy 
    from here (select it, Ctrl+C - careful that you don't pick up any leading 
    spaces) and paste (Ctrl+V).&nbsp; You will have to break it down yourself, 
    if you want, but what did it find?<ul>
      <li>all folders in the Windows folder (or subfolder thereof) named with a 
      GUID (Globally Unique IDentifier - see Wikipedia
      <a class="EXTlnk" target="_blank" href="http://en.wikipedia.org/wiki/Globally_unique_identifier">
      here</a>).</li>
    </ul>
    </li>
  </ul>
  </li>
</ol>
<p><a title="Top of page" href="#top" style="background-color:transparent">
<img border="0" src="../images/common/arrow_top.gif" width="23" height="23"></a></p>

</body>

</html>
